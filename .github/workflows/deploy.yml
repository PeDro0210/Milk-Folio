name: build-and-deploy

on:
  push:
    branches: ["master"]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build images (tagged as :latest)
        run: |
          echo "Building backend..."
          docker build -t milk-backend:latest ./milk-backend
          echo "Building webview..."
          docker build -t milk-webview:latest ./milk-webview
          echo "Builds done."

      - name: Create .env for remote
        run: |
          cat > .env <<EOF
          BACKEND_PORT=${{ secrets.BACKEND_PORT }}
          WEBVIEW_PORT=${{ secrets.WEBVIEW_PORT }}
          VITE_BACKEND_URL=${{ secrets.VITE_BACKEND_URL }}
          BACKEND_HOST=${{ secrets.BACKEND_HOST }}
          WEBVIEW_URL=${{ secrets.WEBVIEW_URL }}
          EOF
          echo ".env created (first lines):"
          sed -n '1,20p' .env || true

      - name: Save images to tar (local)
        run: |
          echo "Saving images to images.tar ..."
          docker save milk-backend:latest milk-webview:latest > images.tar
          ls -lh images.tar

      - name: Prepare SSH key
        run: |
          printf "%s" "${{ secrets.VPS_SSH_KEY }}" > /tmp/deploy_key
          chmod 600 /tmp/deploy_key

      - name: Ensure remote dir exists
        run: |
          ssh -i /tmp/deploy_key -o StrictHostKeyChecking=no -o ServerAliveInterval=60 ${{ secrets.VPS_USER }}@${{ secrets.VPS_HOST }} "mkdir -p ~/Milk-Folio"

      - name: Upload images + compose + env to VPS (scp)
        run: |
          scp -i /tmp/deploy_key -o StrictHostKeyChecking=no images.tar docker-compose.yml .env ${{ secrets.VPS_USER }}@${{ secrets.VPS_HOST }}:~/Milk-Folio/

      - name: Load images & deploy on VPS
        run: |
          ssh -i /tmp/deploy_key -o StrictHostKeyChecking=no -o ServerAliveInterval=60 ${{ secrets.VPS_USER }}@${{ secrets.VPS_HOST }} <<'REMOTE'
            set -e
            cd ~/Milk-Folio
            echo "Loading images from images.tar ..."
            docker load < images.tar
            echo "Starting compose..."
            docker compose down --remove-orphans
            docker compose up -d
            rm -f images.tar
            echo "Deploy finished"
          REMOTE

      - name: Cleanup local archive
        run: |
          rm -f images.tar

