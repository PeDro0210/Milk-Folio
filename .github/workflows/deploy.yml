name: build-and-deploy-no-registry

on:
  push:
    branches: ["master"]

env:
  IMAGE_TAG: ${{ github.sha }}

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build images (tagged)
        run: |
          # build images and tag them with IMAGE_TAG
          docker build -t milk-backend:${IMAGE_TAG} ./milk-backend
          docker build -t milk-webview:${IMAGE_TAG} ./milk-webview

      - name: Create .env for remote
        run: |
          cat > .env <<EOF
          BACKEND_PORT=${{ secrets.BACKEND_PORT }}
          WEBVIEW_PORT=${{ secrets.WEBVIEW_PORT }}
          VITE_BACKEND_URL=${{ secrets.VITE_BACKEND_URL }}
          BACKEND_HOST=${{ secrets.BACKEND_HOST }}
          WEBVIEW_URL=${{ secrets.WEBVIEW_URL }}
          IMAGE_TAG=${IMAGE_TAG}
          EOF


      - name: Stream images to VPS (write remote gz then load)
        run: |
          # write the SSH key
          echo "${{ secrets.VPS_SSH_KEY }}" > ~/deploy_key
          chmod 600 ~/deploy_key


          # stream compressed images to a remote file (cat will consume stdin -> no shell parsing)
          docker save milk-backend:${IMAGE_TAG} milk-webview:${IMAGE_TAG} \
            | gzip -c \
            | ssh -i ~/deploy_key -o Compression=yes -o ServerAliveInterval=60 -o ServerAliveCountMax=5 -o StrictHostKeyChecking=no ${{ secrets.VPS_USER }}@${{ secrets.VPS_HOST }} \
              'cat > ~/Milk-Folio/images.tar.gz'

          # load on remote, then remove the archive
          ssh -i ~/deploy_key -o Compression=yes -o ServerAliveInterval=60 -o StrictHostKeyChecking=no ${{ secrets.VPS_USER }}@${{ secrets.VPS_HOST }} \
            'cd ~/Milk-Folio && gunzip -c images.tar.gz | docker load && rm -f images.tar.gz'

      - name: Upload docker-compose.yml and .env (small files)
        run: |
          scp -i /tmp/deploy_key -o Compression=yes -o StrictHostKeyChecking=no docker-compose.yml .env ${{ secrets.VPS_USER }}@${{ secrets.VPS_HOST }}:~/Milk-Folio/

      - name: Run compose on VPS
        run: |
          ssh -i /tmp/deploy_key -o Compression=yes -o ServerAliveInterval=60 -o StrictHostKeyChecking=no ${{ secrets.VPS_USER }}@${{ secrets.VPS_HOST }} <<'EOF'
            cd ~/Milk-Folio
            # optionally prune old containers/images you don't need:
            # docker image prune -f
            docker compose down --remove-orphans
            docker compose up -d
            # optional: show recent containers
            docker ps --filter "name=milk" || true
          EOF

